YUI.add("flickr-activity-recentByType-fetcher",(function(t,e){"use strict";t.namespace("ListFetchers")["flickr-activity-recentByType"]={run:function(i,o){var n=this,s=this._processParams(i);return new t.FlickrPromise({apiResponse:o.callAPI("flickr.activity.recentByType",s),notificationModelRegistry:o.getModelRegistry("notification-models"),notificationsModelRegistry:o.getModelRegistry("person-notifications-models")}).then((function(t){return n._processResponse(t,i,s,o)}),t.FetcherErrorLogger(e))},_processParams:function(e){var i={extras:["sizes","icon_urls","ignored","rev_ignored","tags","autotags","datecreate"].join(",")+","+t.APIHelper.request.getRebootPhotoExtras(),count:30,per_object:12,secure_image_embeds:1,max_users:2,notification_groups:e.notificationGroups||"default"};return e.muteFilter&&(i.mute_filter=e.muteFilter),e.onlyGroupId&&(i.only_group_id=e.onlyGroupId),"continuation"in e?i.continuation=e.continuation:"page"in e&&(i.page=e.page,i.per_page=e.perPage),i},_processResponse:function(e,i,o,n){var s=e.apiResponse,a=e.notificationModelRegistry,r=e.notificationsModelRegistry,c=[],u=new t.NotificationsHelper(n);return s.items?(s.items.item.forEach((function(e){var i=e.events||[],o={id:t.guid(),isSeen:1===e.seen||!0===e.seen,isMuted:!!e.is_muted,type:e.type,timestamp:e.date,activityData:e,eventDataList:i};c.push(u.extractEntitiesFromResponse(o).then((function(t){var o={id:e.id,isSeen:e.seen,isMuted:!!e.is_muted,type:e.type,timestamp:e.date,activityData:e,eventDataList:i,userModels:t.userModels,activityEntityModels:t.activityEntityModels,eventEntityModelsList:t.eventEntityModelsList};return a.addOrUpdate(o)})))})),t.Promise.all(c).then((function(t){var e,n,a,c={id:i.id};return"continuation"in o?(e=r.addOrUpdate(c),"0"===o.continuation&&(n=e.getValue("initialNotificationsData")||{},a="notificationGroups="+i.notificationGroups,i.muteFilter&&(a+="&muteFilter="+i.muteFilter),i.onlyGroupId&&(a+="&onlyGroupId="+i.onlyGroupId),n[a]=n[a]||{token:s.continuation,list:t},e.setValue("initialNotificationsData",n)),{notificationModels:t,continuation:s.continuation}):"page"in o?(r.exists(i.id)?r.getValue(i.id,"notifications").addPage({page:o.page,perPage:o.per_page,pageContent:t,totalItems:parseInt(s.items.total||0,10)}):(c.notifications=t,r.add(c)),t):void 0}))):t.Promise.resolve(Object.assign(s,{notificationModels:[]}))}}}),"@VERSION@",{requires:["flickr-promise","search-helper","querystring-parse-simple"],optional:["url-helper","notification-models","person-notifications-models","contact-models","photo-models","notification-models"]});